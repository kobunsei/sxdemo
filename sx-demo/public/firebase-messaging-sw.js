importScripts('https://www.gstatic.com/firebasejs/10.12.0/firebase-app-compat.js');
importScripts('https://www.gstatic.com/firebasejs/10.12.0/firebase-messaging-compat.js');

const firebaseConfig = {
  apiKey: "AIzaSyB1pTmx12Zre3lphJsr3bHDEO2tPlX4BYo",
  authDomain: "sx-demo-3eb0f.firebaseapp.com",
  projectId: "sx-demo-3eb0f",
  storageBucket: "sx-demo-3eb0f.appspot.com",
  messagingSenderId: "841946081148",
  appId: "1:841946081148:web:96ea13f89519764d2de6f9"
};

firebase.initializeApp(firebaseConfig);

const messaging = firebase.messaging();

// https://developer.mozilla.org/en-US/docs/Web/API/Clients
// self.addEventListener('notificationclick', event => {
//   event.notification.close();

//   console.log("click");
//   event.waitUntil(
//     (async () => {
//       const allClients = await self.clients.matchAll({
//         includeUncontrolled: true,
//       });

//       let appClient;

//       let path = event.notification.data._webPath || '/';

//       // If we already have a window open, use it.
//       for (const client of allClients) {
//         const url = new URL(client.url);

//         if (url.pathname === path) {
//           client.focus();
//           appClient = client;
//           break;
//         }
//       }

//       // If there is no existing window, open a new one.
//       if (!appClient) {
//         appClient = await self.clients.openWindow(path);
//       }

//       // Message the client:
//       // `origin` will always be `'selected'` in this case.
//       // https://docs.expo.io/versions/latest/sdk/notifications/#notification
//       appClient.postMessage({
//         origin: 'selected',
//         data: event.notification.data,
//         remote: !event.notification._isLocal,
//       });
//     })()
//   );
// });

// TODO: Consider cache: https://github.com/expo/expo-cli/pull/844#issuecomment-515619883
// Import the script generated by workbox.
// self.importScripts('service-worker.js');